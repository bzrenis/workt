// Test script per verificare le correzioni alle notifiche
// Verificher√† se AsyncStorage ora contiene le date di reperibilit√†

const testAsyncStorageReperibilita = async () => {
  try {
    console.log('üîç VERIFICA CORREZIONI - Inizio test...');
    console.log('');
    
    // 1. Test di base AsyncStorage
    const AsyncStorage = require('@react-native-async-storage/async-storage').default;
    const settingsStr = await AsyncStorage.getItem('settings');
    
    console.log('üì± Stato AsyncStorage:');
    if (settingsStr) {
      const settings = JSON.parse(settingsStr);
      console.log('‚úÖ Settings trovate in AsyncStorage');
      
      if (settings.standbySettings) {
        console.log('‚úÖ standbySettings presenti');
        
        if (settings.standbySettings.standbyDays) {
          const standbyDays = settings.standbySettings.standbyDays;
          const allDates = Object.keys(standbyDays);
          const activeDates = allDates.filter(date => standbyDays[date]?.selected);
          
          console.log(`üìÖ Totale date nel calendario: ${allDates.length}`);
          console.log(`üìÖ Date attive (selected: true): ${activeDates.length}`);
          
          if (activeDates.length > 0) {
            console.log('‚úÖ Date attive trovate:');
            activeDates.forEach((date, index) => {
              console.log(`   ${index + 1}. ${date}`);
            });
          } else {
            console.log('‚ö†Ô∏è Nessuna data attiva trovata');
          }
          
        } else {
          console.log('‚ùå standbyDays non trovate');
        }
      } else {
        console.log('‚ùå standbySettings non trovate');
      }
    } else {
      console.log('‚ùå Nessuna settings trovata in AsyncStorage');
    }
    
    console.log('');
    console.log('üîç VERIFICA CORREZIONI - Test completato');
    
  } catch (error) {
    console.error('‚ùå Errore nel test:', error.message);
  }
};

// Esegui il test
testAsyncStorageReperibilita();
