/**
 * üîç DEBUG BREAKDOWN - Verifica perch√© i dettagli non appaiono
 */

console.log('üîç === DEBUG BREAKDOWN DAILY_RATE_WITH_SUPPLEMENTS ===');
console.log('');

// Simula il caricamento del metodo di calcolo
console.log('1Ô∏è‚É£ Verifico il metodo di calcolo salvato...');

const fs = require('fs');

// Verifica che la chiamata al metodo sia nel posto giusto
const calculationServiceContent = fs.readFileSync('./src/services/CalculationService.js', 'utf8');

console.log('2Ô∏è‚É£ Verifico il flusso nel CalculationService...');

// Cerca il punto dove viene chiamato calculateDailyRateWithSupplements
const callsMethod = calculationServiceContent.includes('paymentCalculationMethod === \'DAILY_RATE_WITH_SUPPLEMENTS\'');
const hasMethodCall = calculationServiceContent.includes('this.calculateDailyRateWithSupplements(workEntry, settings, workHours, travelHours)');
const setsBreakdown = calculationServiceContent.includes('result.details.dailyRateBreakdown = dailyRateResult.breakdown');

console.log('   Controlli flusso CalculationService:', {
  verificaMetodo: callsMethod ? '‚úÖ' : '‚ùå',
  chiamaMetodo: hasMethodCall ? '‚úÖ' : '‚ùå', 
  impostaBreakdown: setsBreakdown ? '‚úÖ' : '‚ùå'
});

// Verifica nel TimeEntryForm
const timeEntryFormContent = fs.readFileSync('./src/screens/TimeEntryForm.js', 'utf8');

console.log('3Ô∏è‚É£ Verifico il rendering nel TimeEntryForm...');

const hasRenderCheck = timeEntryFormContent.includes('breakdown?.details?.calculationMethod === \'DAILY_RATE_WITH_SUPPLEMENTS\'');
const hasBreakdownRender = timeEntryFormContent.includes('breakdown?.details?.dailyRateBreakdown');
const hasLogSystem = timeEntryFormContent.includes('SISTEMA TARIFFA GIORNALIERA ATTIVO');

console.log('   Controlli rendering TimeEntryForm:', {
  verificaMetodoRender: hasRenderCheck ? '‚úÖ' : '‚ùå',
  renderBreakdown: hasBreakdownRender ? '‚úÖ' : '‚ùå',
  logSistema: hasLogSystem ? '‚úÖ' : '‚ùå'
});

console.log('4Ô∏è‚É£ Possibili problemi da verificare...');
console.log('');

if (!callsMethod || !hasMethodCall || !setsBreakdown) {
  console.log('‚ùå PROBLEMA NEL CALCULATIONSERVICE:');
  console.log('   Il metodo non viene chiamato o il breakdown non viene impostato');
}

if (!hasRenderCheck || !hasBreakdownRender) {
  console.log('‚ùå PROBLEMA NEL TIMEENTRYFORM:');
  console.log('   Il breakdown non viene renderizzato correttamente');
}

// Suggerimenti per il debug
console.log('üîß PASSI PER IL DEBUG:');
console.log('');
console.log('1. Apri l\'app e vai nel TimeEntryForm');
console.log('2. Inserisci un intervento su giorno feriale (es. Luned√¨)');
console.log('3. Controlla i log nella console per vedere:');
console.log('   üìä "SISTEMA TARIFFA GIORNALIERA ATTIVO:" - se appare');
console.log('   üìä "Metodo DAILY_RATE_WITH_SUPPLEMENTS attivo" - se appare');
console.log('   üìä Il breakdown completo del risultato');
console.log('');

console.log('4. Verifica che nelle impostazioni sia selezionato:');
console.log('   "Tariffa Giornaliera + Maggiorazioni CCNL"');
console.log('');

console.log('5. Se i log non appaiono, il problema √® in:');
console.log('   ‚Ä¢ AsyncStorage non carica il metodo corretto');
console.log('   ‚Ä¢ La condizione if non viene soddisfatta');
console.log('   ‚Ä¢ Il metodo calculateDailyRateWithSupplements non viene chiamato');
console.log('');

console.log('6. Se i log appaiono ma l\'UI no, il problema √® in:');
console.log('   ‚Ä¢ La struttura del breakdown non √® corretta');
console.log('   ‚Ä¢ La condizione di rendering nel TimeEntryForm');
console.log('   ‚Ä¢ I dati non vengono passati correttamente');
console.log('');

console.log('‚úÖ Controlla i log e dimmi cosa appare nella console!');
console.log('   Questo ci aiuter√† a capire dove si interrompe il flusso.');
